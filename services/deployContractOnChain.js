const Tx = require('@ethereumjs/tx').Transaction
var Web3 = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/4c881e151e0e4242b34c276f326429d3'));
const Common = require('@ethereumjs/common')
const common = new Common.default({ chain: 'rinkeby' })
const data = '0x60806040526040518060400160405280600d81526020017f494e56414c49445f544f4b454e0000000000000000000000000000000000000081525060009080519060200190620000519291906200016c565b506040518060400160405280600281526020017f4954000000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f9291906200016c565b506000600255348015620000b257600080fd5b50620f424060038190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035460056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000281565b8280546200017a906200021c565b90600052602060002090601f0160209004810192826200019e5760008555620001ea565b82601f10620001b957805160ff1916838001178555620001ea565b82800160010185558215620001ea579182015b82811115620001e9578251825591602001919060010190620001cc565b5b509050620001f99190620001fd565b5090565b5b8082111562000218576000816000905550600101620001fe565b5090565b600060028204905060018216806200023557607f821691505b602082108114156200024c576200024b62000252565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610e2180620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634d853ee5116100715780634d853ee51461017a57806370a082311461019857806376809ce3146101c857806395d89b41146101e6578063a9059cbb14610204578063dd62ed3e14610234576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a57806327e235e31461014a575b600080fd5b6100b6610264565b6040516100c39190610bb4565b60405180910390f35b6100e660048036038101906100e19190610ab2565b6102f2565b6040516100f39190610b7e565b60405180910390f35b61010461043d565b6040516101119190610bd6565b60405180910390f35b610134600480360381019061012f9190610a63565b610443565b6040516101419190610b7e565b60405180910390f35b610164600480360381019061015f91906109fe565b6106c9565b6040516101719190610bd6565b60405180910390f35b6101826106e1565b60405161018f9190610b63565b60405180910390f35b6101b260048036038101906101ad91906109fe565b610707565b6040516101bf9190610bd6565b60405180910390f35b6101d0610750565b6040516101dd9190610b99565b60405180910390f35b6101ee610756565b6040516101fb9190610bb4565b60405180910390f35b61021e60048036038101906102199190610ab2565b6107e4565b60405161022b9190610b7e565b60405180910390f35b61024e60048036038101906102499190610a27565b61094d565b60405161025b9190610bd6565b60405180910390f35b6000805461027190610d1c565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610d1c565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561034057600080fd5b6000821161034d57600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042b9190610bd6565b60405180910390a36001905092915050565b60035481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104ce57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561051a57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105699190610c63565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fc9190610c63565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106529190610c0d565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b69190610bd6565b60405180910390a3600190509392505050565b60056020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60025481565b6001805461076390610d1c565b80601f016020809104026020016040519081016040528092919081815260200182805461078f90610d1c565b80156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561083257600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108819190610c0d565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d79190610c63565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093b9190610bd6565b60405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000813590506109e381610dbd565b92915050565b6000813590506109f881610dd4565b92915050565b600060208284031215610a1057600080fd5b6000610a1e848285016109d4565b91505092915050565b60008060408385031215610a3a57600080fd5b6000610a48858286016109d4565b9250506020610a59858286016109d4565b9150509250929050565b600080600060608486031215610a7857600080fd5b6000610a86868287016109d4565b9350506020610a97868287016109d4565b9250506040610aa8868287016109e9565b9150509250925092565b60008060408385031215610ac557600080fd5b6000610ad3858286016109d4565b9250506020610ae4858286016109e9565b9150509250929050565b610af781610c97565b82525050565b610b0681610ca9565b82525050565b610b1581610cb5565b82525050565b6000610b2682610bf1565b610b308185610bfc565b9350610b40818560208601610ce9565b610b4981610dac565b840191505092915050565b610b5d81610cdf565b82525050565b6000602082019050610b786000830184610aee565b92915050565b6000602082019050610b936000830184610afd565b92915050565b6000602082019050610bae6000830184610b0c565b92915050565b60006020820190508181036000830152610bce8184610b1b565b905092915050565b6000602082019050610beb6000830184610b54565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610c1882610cdf565b9150610c2383610cdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c5857610c57610d4e565b5b828201905092915050565b6000610c6e82610cdf565b9150610c7983610cdf565b925082821015610c8c57610c8b610d4e565b5b828203905092915050565b6000610ca282610cbf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d07578082015181840152602081019050610cec565b83811115610d16576000848401525b50505050565b60006002820490506001821680610d3457607f821691505b60208210811415610d4857610d47610d7d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610dc681610c97565b8114610dd157600080fd5b50565b610ddd81610cdf565b8114610de857600080fd5b5056fea2646970667358221220f2c53e88c3c3fd3d64aa2b485533fea8bfecd9d5338a05ba1b90bafde5c494fc64736f6c63430008000033';
const address = '0x7bA0037FeD605C7d83BD5Ff7b70c1Eb697691026';
var deployContractOnChain = () => {
  /* Get Nonce value */
  web3.eth.getTransactionCount(address).then(txCount => {
    const txData = {
      nonce: web3.utils.toHex(txCount),
      gasLimit: web3.utils.toHex(1000000),
      gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')), // 10-15 gwei should be ok
      data: data
    };
    const transaction = new Tx(txData, { common });
    var privateKey = Buffer.from('4f9736df515bf7380ad7b938e7cdb2638ec2ee0192ed3a845fe78734cfdf9c96', "hex");
    //transaction.sign(Buffer.from(req.privateKey,"hex"));
    //const serializedTx = transaction.serialize();
    /* Signed the transaction with your private key */
    const serializedTx = transaction.sign(privateKey).serialize().toString('hex')
    const raw = "0x" + serializedTx;

    /* Send the signed Transactions */
    web3.eth.sendSignedTransaction(raw, (err, txHash) => {
      console.log("txHash: " + txHash);
      console.log("err: " + err);
      //0x1239472ec3b8f23cf79e02d0d48845a638efe4f422a335404aff0c69a1218ddf
      return txHash;
    });
  });
}

module.exports.deployContractOnChain = deployContractOnChain;